
{
	# admin 0.0.0.0:2019

	### for testing
	# acme_ca https://acme-staging-v02.api.letsencrypt.org/directory

	email {$SSL_EMAIL}
}

(authentik) {
	# always forward outpost path to actual outpost
	reverse_proxy /outpost.goauthentik.io/* authentik-server:9000

	# forward authentication to outpost
	forward_auth authentik-server:9000 {
		uri /outpost.goauthentik.io/auth/caddy

		# capitalization of the headers is important, otherwise they will be empty
		copy_headers X-Authentik-Username X-Authentik-Groups X-Authentik-Email X-Authentik-Name X-Authentik-Uid X-Authentik-Jwt X-Authentik-Meta-Jwks X-Authentik-Meta-Outpost X-Authentik-Meta-Provider X-Authentik-Meta-App X-Authentik-Meta-Version

		# basic auth fix
		copy_headers Authorization

		# optional, in this config trust all private ranges, should probably be set to the outposts IP
		trusted_proxies private_ranges
	}
}

{$CUSTOM_DOMAIN}, *.{$CUSTOM_DOMAIN} {
	tls {
		dns cloudflare {$CF_API_TOKEN}
		resolvers 1.1.1.1 # think this is required? whatever, it's working now so i'll just leave it
		propagation_timeout 10m # important, doesn't update quick enough by default (for whatever reason..)
	}

	log {
		output file /data/access-internal.log
	}

	# only allow local access (redundant, but just in case)
	@denied not remote_ip private_ranges
	abort @denied

	# auth
	@auth host auth.{$CUSTOM_DOMAIN}
	handle @auth {
		reverse_proxy authentik-server:9000
		encode gzip
	}

	# public
	@homepage host {$CUSTOM_DOMAIN}
	handle @homepage {
		import authentik
		reverse_proxy homepage:3000
		encode gzip
	}

	# todo: seems to be broken when forwarding Authorization header
	# https://github.com/goauthentik/authentik/issues/6519#issuecomment-1701861776
	# @share host share.{$CUSTOM_DOMAIN}
	# handle @share {
	# 	import authentik
	# 	reverse_proxy pairdrop:6824
	# 	encode gzip
	# }

	@speedtest host speedtest.{$CUSTOM_DOMAIN}
	handle @speedtest {
		import authentik
		reverse_proxy openspeedtest:3000
		encode gzip
	}

	@immich host immich.{$CUSTOM_DOMAIN}
	handle @immich {
		reverse_proxy immich_server:3001
		encode gzip
	}

	# dev
	@code host code.{$CUSTOM_DOMAIN}
	handle @code {
		import authentik
		reverse_proxy code-server:8443
		encode gzip
	}

	# arrs
	@radarr host radarr.{$CUSTOM_DOMAIN}
	handle @radarr {
		import authentik
		import lunasea
		reverse_proxy radarr:7878
		encode gzip
	}

	@prowlarr host prowlarr.{$CUSTOM_DOMAIN}
	handle @prowlarr {
		import authentik
		reverse_proxy prowlarr:9696
		encode gzip
	}

	@sonarr host sonarr.{$CUSTOM_DOMAIN}
	handle @sonarr {
		import authentik
		reverse_proxy sonarr:8989
		encode gzip
	}

	# Fallback for otherwise unhandled domains
	handle {
		abort
	}
}
